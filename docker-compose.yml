version: "3.8"

services:
  postgres:
    image: postgres:17
    container_name: sidekick_postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d sequence_sidekick"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: sequence
      POSTGRES_DB: sequence_sidekick
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d

  redis:
    container_name: sidekick_redis
    image: redis:7.2
    restart: always
    command: redis-server --requirepass sequence
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    
  sequence_sidekick:
    build: .
    container_name: sequence_sidekick
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://dev:sequence@postgres:5432/sequence_sidekick?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: sequence
    ports:
      - "3000:3000"
    command: ["pnpm", "start"]

volumes:
  postgres_data:
  redis_data: